type: edu
custom_name: stage6
files:
- name: test/CoffeeMachineTest.java
  visible: false
  text: |
    import machine.CoffeeMachine;
    import org.hyperskill.hstest.v6.stage.BaseStageTest;
    import org.hyperskill.hstest.v6.testcase.CheckResult;
    import org.hyperskill.hstest.v6.testcase.TestCase;

    import java.util.ArrayList;
    import java.util.List;


    class TestClue {
        int water;
        int milk;
        int beans;
        int cups;
        int money;
        String feedback;
        TestClue(int w, int m, int b, int c, int mo, String feedback) {
            water = w;
            milk = m;
            beans = b;
            cups = c;
            money = mo;
            this.feedback = feedback;
        }
    }

    public class CoffeeMachineTest extends BaseStageTest<TestClue> {

        public CoffeeMachineTest() {
            super(CoffeeMachine.class);
        }

        @Override
        public List<TestCase<TestClue>> generate() {
            return List.of(
                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        700 - 400,
                        390 - 540,
                        80 - 120 ,
                        7 - 9,
                        0 - 550,
                        "This test is exactly " +
                            "like in the example - try to run it by yourself"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "2\n" +
                            "buy\n" +
                            "2\n" +
                            "fill\n" +
                            "1000\n" +
                            "0\n" +
                            "0\n" +
                            "0\n" +
                            "buy\n" +
                            "2\n" +
                            "take\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        3000,
                        3000,
                        3000 ,
                        3000,
                        0,
                        "This test checks \"fill\" action"))
                    .setInput(
                        "remaining\n" +
                            "fill\n" +
                            "3000\n" +
                            "3000\n" +
                            "3000\n" +
                            "3000\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        -250,
                        0,
                        -16 ,
                        -1,
                        4, "This test checks \"buy\" " +
                        "action with the first variant of coffee"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "1\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        -350,
                        -75,
                        -20 ,
                        -1,
                        7, "This test checks \"buy\" " +
                        "action with the second variant of coffee"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "2\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        -200,
                        -100,
                        -12 ,
                        -1,
                        6, "This test checks \"buy\" " +
                        "action with the third variant of coffee"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "3\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        0,
                        0,
                        0 ,
                        0,
                        -550, "This test checks \"take\" action"))
                    .setInput(
                        "remaining\n" +
                            "take\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        0,
                        0,
                        0 ,
                        0,
                        0, "This test checks \"back\" " +
                        "action right after \"buy\" action"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "back\n" +
                            "remaining\n" +
                            "exit\n")
            );
        }

        @Override
        public CheckResult check(String reply, TestClue clue) {
            String[] lines = reply.split("\\n");

            if (lines.length <= 1) {
                return CheckResult.FALSE;
            }

            int water_ = clue.water;
            int milk_ = clue.milk;
            int beans_ = clue.beans;
            int cups_ = clue.cups;
            int money_ = clue.money;

            List<Integer> milk = new ArrayList<>();
            List<Integer> water = new ArrayList<>();
            List<Integer> beans = new ArrayList<>();
            List<Integer> cups = new ArrayList<>();
            List<Integer> money = new ArrayList<>();

            for (String line : lines) {
                line = line.replace("$", "").trim();
                String[] words = line.split("\\s+");
                if (words.length == 0) {
                    continue;
                }
                String firstWord = words[0];
                int amount;
                try {
                    amount = Integer.parseInt(firstWord);
                }
                catch (Exception e) {
                    continue;
                }
                if (line.contains("milk")) {
                    milk.add(amount);
                }
                else if (line.contains("water")) {
                    water.add(amount);
                }
                else if (line.contains("beans")) {
                    beans.add(amount);
                }
                else if (line.contains("cups")) {
                    cups.add(amount);
                }
                else if (line.contains("money")) {
                    money.add(amount);
                }
            }

            int milk0 = milk.get(0);
            int milk1 = milk.get(milk.size() - 1);

            int water0 = water.get(0);
            int water1 = water.get(water.size() - 1);

            int beans0 = beans.get(0);
            int beans1 = beans.get(beans.size() - 1);

            int cups0 = cups.get(0);
            int cups1 = cups.get(cups.size() - 1);

            int money0 = money.get(0);
            int money1 = money.get(money.size() - 1);

            int diffWater = water1 - water0;
            int diffMilk = milk1 - milk0;
            int diffBeans = beans1 - beans0;
            int diffCups = cups1 - cups0;
            int diffMoney = money1 - money0;

            boolean isCorrect =
                diffWater == water_ &&
                    diffMilk == milk_ &&
                    diffBeans == beans_ &&
                    diffCups == cups_ &&
                    diffMoney == money_;

            return new CheckResult(isCorrect, clue.feedback);
        }
    }
  learner_created: false
- name: src/machine/CoffeeMachine.java
  visible: true
  text: |-
    package machine;
    import java.util.Scanner;

    public class CoffeeMachine {
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);



            CoffeMachineModel express = new CoffeMachineModel(1200,540, 120, 9, 550);
            EspressoModel espresso = new EspressoModel();


            System.out.println(express);

    //        final int WATER_FOR_ONE_CUP = 200;
    //        final int MILK_FOR_ONE_CUP = 50;
    //        final int BEANS_FOR_ONE_CUP = 15;
    //
    //        System.out.println("Write how many ml of water the coffee machine has: ");
    //        int water  = scanner.nextInt();
    //
    //        System.out.println("Write how many ml of milk the coffee machine has: ");
    //        int milk  = scanner.nextInt();
    //
    //        System.out.println("Write how many grams of coffee beans the coffee machine has: ");
    //        int beans  = scanner.nextInt();
    //
    //        System.out.println("Write how many cups of coffee you will need: ");
    //        int cups  = scanner.nextInt();

            int maximumCups = Math.min(Math.min(express.getContainerIngradientsWater() / espresso.waterPerOneCup, express.getContainerIngradientsMilk() / espresso.milkPerOneCup), express.getContainerIngradientsCoffeBeans() / espresso.beansPerOneCup);

            if (maximumCups == express.getContainerIngradientsDisposableCups()) {
                System.out.println("Yes, I can make that amount of coffee");
            } else if (maximumCups > express.getContainerIngradientsDisposableCups()) {
                System.out.println("Yes, I can make that amount of coffee (and even " +
                        (maximumCups - express.getContainerIngradientsDisposableCups()) + " more than that)");
            } else {
                System.out.println("No, I can make only " + maximumCups + " cup(s) of coffee");
            }


        }
    }
  learner_created: false
- name: src/machine/CoffeeMachineCoffeeMaker.java
  visible: true
  text: |+
    package machine;

    import java.util.Scanner;

    public class CoffeeMachineCoffeeMaker {

        private int numberOfCoffeeCupsToProduce;
        private int numberOfCoffeeCupsPossibleToProduce;
        //        200 ml of water, 50 ml of milk, and 15 g of coffee beans.
        private final int neededIngradientsWaterPerCup = 200;
        private final int neededIngradientsMilkPerCup = 50;
        private final int neededIngradientsCoffeBeansPerCup = 15;

        private int neededIngradientsWaterForThisNumberOfCups;
        private int neededIngradientsMilkForThisNumberOfCups;
        private int neededIngradientsCoffeBeansForThisNumberOfCups;

        private int containerIngradientsWater;
        private int containerIngradientsMilk;
        private int containerIngradientsCoffeBeans;

        public void calculateCoffeIngradients() {

            Scanner sc = new Scanner(System.in);

            System.out.println("Write how many ml of water the coffee machine has:");
            System.out.print("> ");
            containerIngradientsWater = sc.nextInt();
            System.out.println("Write how many ml of milk the coffee machine has:");
            System.out.print("> ");
            containerIngradientsMilk = sc.nextInt();
            System.out.println("Write how many grams of coffee beans the coffee machine has: ");
            System.out.print("> ");
            containerIngradientsCoffeBeans = sc.nextInt();

            System.out.println("Write how many cups of coffe you will need:");
            System.out.print("> ");

            numberOfCoffeeCupsToProduce = sc.nextInt();

            neededIngradientsWaterForThisNumberOfCups = numberOfCoffeeCupsToProduce * neededIngradientsWaterPerCup;
            neededIngradientsMilkForThisNumberOfCups = numberOfCoffeeCupsToProduce * neededIngradientsWaterPerCup;
            neededIngradientsCoffeBeansForThisNumberOfCups = numberOfCoffeeCupsToProduce * neededIngradientsCoffeBeansPerCup;


    //        System.out.println("For " + numberOfCoffeeCupsToProduce
    //                + " cups of coffee you will need: \n"
    //                + neededIngradientsWaterPerCup * numberOfCoffeeCupsToProduce + " ml of water \n"
    //                + neededIngradientsMilkPerCup * numberOfCoffeeCupsToProduce + " ml of milk \n"
    //                + neededIngradientsCoffeBeansPerCup * numberOfCoffeeCupsToProduce + " g of coffee beans \n");
            if ((containerIngradientsWater == 0 || containerIngradientsMilk == 0 || containerIngradientsCoffeBeans == 0) && numberOfCoffeeCupsPossibleToProduce > 0) {
                // No, I can make only 0 cup(s) of coffee
                System.out.println("No, I can make only 0 cup(s) of coffee");
            } else if ((containerIngradientsWater == 0 || containerIngradientsMilk == 0 || containerIngradientsCoffeBeans == 0) && numberOfCoffeeCupsPossibleToProduce == 0) {
                // No, I can make only 0 cup(s) of coffee
                System.out.println("Yes, I can make only 0 cup(s) of coffee");
            } else if (neededIngradientsCoffeBeansForThisNumberOfCups < containerIngradientsWater
                    && neededIngradientsMilkForThisNumberOfCups < containerIngradientsMilk
                    && neededIngradientsCoffeBeansForThisNumberOfCups < containerIngradientsCoffeBeans) {

                containerIngradientsWater = containerIngradientsWater - neededIngradientsWaterForThisNumberOfCups;
                containerIngradientsMilk = containerIngradientsMilk - neededIngradientsMilkForThisNumberOfCups;
                containerIngradientsCoffeBeans = containerIngradientsCoffeBeans - neededIngradientsCoffeBeansForThisNumberOfCups;


                if (numberOfCoffeeCupsToProduce == 1) {
                    System.out.println("Yes, I can make that amount of coffee");
                } else if (containerIngradientsWater > containerIngradientsMilk && containerIngradientsWater > containerIngradientsCoffeBeans) {
                    numberOfCoffeeCupsPossibleToProduce = containerIngradientsWater / neededIngradientsWaterPerCup;
                    System.out.println("Yes, I can make that amount of coffee (and even " + numberOfCoffeeCupsPossibleToProduce + " more than that");
                } else if (containerIngradientsMilk > containerIngradientsWater && containerIngradientsMilk > containerIngradientsCoffeBeans) {
                    numberOfCoffeeCupsPossibleToProduce = containerIngradientsMilk / neededIngradientsMilkPerCup;
                    System.out.println("Yes, I can make that amount of coffee (and even " + numberOfCoffeeCupsPossibleToProduce + " more than that");
                } else {
                    numberOfCoffeeCupsPossibleToProduce = containerIngradientsCoffeBeans / neededIngradientsCoffeBeansPerCup;
                    System.out.println("Yes, I can make that amount of coffee (and even " + numberOfCoffeeCupsPossibleToProduce + " more than that");
                }

            } else if (neededIngradientsWaterForThisNumberOfCups > containerIngradientsWater
                    || neededIngradientsMilkForThisNumberOfCups > containerIngradientsMilk
                    || neededIngradientsCoffeBeansForThisNumberOfCups > containerIngradientsCoffeBeans) {
                if (containerIngradientsWater % neededIngradientsWaterForThisNumberOfCups == 0
                        && containerIngradientsMilk % neededIngradientsMilkForThisNumberOfCups == 0) {

                    numberOfCoffeeCupsPossibleToProduce = containerIngradientsCoffeBeans / neededIngradientsCoffeBeansForThisNumberOfCups;

                    System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduce + " cup(s) of coffee");
                } else if (containerIngradientsWater % neededIngradientsWaterForThisNumberOfCups == 0
                        && containerIngradientsCoffeBeans % neededIngradientsCoffeBeansForThisNumberOfCups == 0) {

                    numberOfCoffeeCupsPossibleToProduce = containerIngradientsMilk / neededIngradientsMilkForThisNumberOfCups;

                    System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduce + " cup(s) of coffee");
                } else if (containerIngradientsMilk % neededIngradientsMilkForThisNumberOfCups == 0
                        && containerIngradientsCoffeBeans % neededIngradientsCoffeBeansForThisNumberOfCups == 0) {

                    numberOfCoffeeCupsPossibleToProduce = containerIngradientsWater / neededIngradientsWaterForThisNumberOfCups;

                    System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduce + " cup(s) of coffee");
                }
                // Yes, I can make that amount of coffee (and even 2 more than that)
    //        } else if () {
    //        }
            }
        }
    }

  learner_created: false
- name: src/machine/CoffeMachineIngradientContainer.java
  visible: true
  text: |
    package machine;

    import java.util.Scanner;


    public class CoffeMachineIngradientContainer {

        private int numberOfCoffeeCupsStillToProduce;
        //        200 ml of water, 50 ml of milk, and 15 g of coffee beans.
        private int containerIngradientsWater;
        private int containerIngradientsMilk;
        private int containerIngradientsCoffeBeans;

        public void checkIngradientContainer(){

            Scanner sc = new Scanner(System.in);

            System.out.println("Write how many ml of water the coffee machine has:");
            System.out.print("> ");
            containerIngradientsWater = sc.nextInt();
            System.out.println("Write how many ml of milk the coffee machine has:");
            System.out.print("> ");
            containerIngradientsMilk = sc.nextInt();
            System.out.println("Write how many grams of coffee beans the coffee machine has: ");
            System.out.print("> ");
            containerIngradientsCoffeBeans = sc.nextInt();
            System.out.println("Write how many cups of coffee you will need:");
            System.out.print("> ");


    //        Write how many grams of coffee beans the coffee machine has:
    //> 100
    //        Write how many cups of coffee you will need:
    //> 1
    //        Yes, I can make that amount of coffee

        }
    }
  learner_created: false
- name: src/machine/TestApp.java
  visible: true
  text: |
    package machine;

    import java.util.Scanner;

    public class TestApp {
        public static void main(String[] args) {

            int numberOfCoffeeCupsToProduce  = 10;
            int numberOfCoffeeCupsPossibleToProduce;
            //        200 ml of water, 50 ml of milk, and 15 g of coffee beans.
            final int neededIngredientsWaterPerCup = 200;
            final int neededIngredientsMilkPerCup = 50;
            final int neededIngredientsCoffeBeansPerCup = 15;

            int neededIngredientsWaterForThisNumberOfCups;
            int neededIngredientsMilkForThisNumberOfCups;
            int neededIngredientsCoffeBeansForThisNumberOfCups;

            int containerIngredientsWater = 500;
            int containerIngredientsMilk = 250;
            int containerIngredientsCoffeBeans = 200;


            Scanner sc = new Scanner(System.in);

    //        System.out.println("Write how many ml of water the coffee machine has:");
    //        System.out.print(">");
    //        containerIngredientsWater = sc.nextInt();
    //        System.out.println("Write how many ml of milk the coffee machine has:");
    //        System.out.print(">");
    //        containerIngredientsMilk = sc.nextInt();
    //        System.out.println("Write how many grams of coffee beans the coffee machine has: ");
    //        System.out.print(">");
    //        containerIngredientsCoffeBeans = sc.nextInt();
    //
    //        System.out.println("Write how many cups of coffe you will need:");
    //        System.out.print(">");
    //        numberOfCoffeeCupsToProduce = sc.nextInt();

            neededIngredientsWaterForThisNumberOfCups = numberOfCoffeeCupsToProduce * neededIngredientsWaterPerCup;
            neededIngredientsMilkForThisNumberOfCups = numberOfCoffeeCupsToProduce * neededIngredientsMilkPerCup;
            neededIngredientsCoffeBeansForThisNumberOfCups = numberOfCoffeeCupsToProduce * neededIngredientsCoffeBeansPerCup;


    //        System.out.println("For " + numberOfCoffeeCupsToProduce
    //                + " cups of coffee you will need: \n"
    //                + neededIngredientsWaterPerCup * numberOfCoffeeCupsToProduce + " ml of water \n"
    //                + neededIngredientsMilkPerCup * numberOfCoffeeCupsToProduce + " ml of milk \n"
    //                + neededIngredientsCoffeBeansPerCup * numberOfCoffeeCupsToProduce + " g of coffee beans \n");


            if ((containerIngredientsWater == 0 || containerIngredientsMilk == 0 || containerIngredientsCoffeBeans == 0) && numberOfCoffeeCupsToProduce > 0) {
                // No, I can make only 0 cup(s) of coffee
                System.out.println("No, I can make only 0 cup(s) of coffee");
            } else if ((containerIngredientsWater == 0 || containerIngredientsMilk == 0 || containerIngredientsCoffeBeans == 0) && numberOfCoffeeCupsToProduce == 0) {
                // No, I can make only 0 cup(s) of coffee
                System.out.println("Yes, I can make only 0 cup(s) of coffee");
            } else if (neededIngredientsCoffeBeansForThisNumberOfCups < containerIngredientsWater
                    && neededIngredientsMilkForThisNumberOfCups < containerIngredientsMilk
                    && neededIngredientsCoffeBeansForThisNumberOfCups < containerIngredientsCoffeBeans) {

                containerIngredientsWater = containerIngredientsWater - neededIngredientsWaterForThisNumberOfCups;
                containerIngredientsMilk = containerIngredientsMilk - neededIngredientsMilkForThisNumberOfCups;
                containerIngredientsCoffeBeans = containerIngredientsCoffeBeans - neededIngredientsCoffeBeansForThisNumberOfCups;

                if (numberOfCoffeeCupsToProduce == 1) {
                    System.out.println("Yes, I can make that amount of coffee");
                }else if (containerIngredientsWater > containerIngredientsMilk && containerIngredientsWater > containerIngredientsCoffeBeans) {
                    numberOfCoffeeCupsPossibleToProduce = containerIngredientsWater / neededIngredientsWaterPerCup;
                    System.out.println("Yes, I can make that amount of coffee (and even " + numberOfCoffeeCupsPossibleToProduce + " more than that)");
                } else if (containerIngredientsMilk > containerIngredientsWater && containerIngredientsMilk > containerIngredientsCoffeBeans) {
                    numberOfCoffeeCupsPossibleToProduce = containerIngredientsMilk / neededIngredientsMilkPerCup;
                    System.out.println("Yes, I can make that amount of coffee (and even " + numberOfCoffeeCupsPossibleToProduce + " more than that)");
                } else {
                    numberOfCoffeeCupsPossibleToProduce = containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup;
                    System.out.println("Yes, I can make that amount of coffee (and even " + numberOfCoffeeCupsPossibleToProduce + " more than that)");
                }

            }else if ((neededIngredientsWaterForThisNumberOfCups > containerIngredientsWater
                    || neededIngredientsMilkForThisNumberOfCups > containerIngredientsMilk
                    || neededIngredientsCoffeBeansForThisNumberOfCups > containerIngredientsCoffeBeans) && numberOfCoffeeCupsToProduce > 0)
            {
                if ( containerIngredientsWater / neededIngredientsWaterPerCup <= containerIngredientsMilk / neededIngredientsMilkPerCup
                        && containerIngredientsWater / neededIngredientsWaterPerCup <= containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup) {

                    numberOfCoffeeCupsPossibleToProduce = containerIngredientsWater / neededIngredientsWaterPerCup;

                    System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduce + " cup(s) of coffee");
                } else if (containerIngredientsMilk / neededIngredientsMilkPerCup <= containerIngredientsWater / neededIngredientsWaterPerCup
                        && containerIngredientsMilk / neededIngredientsMilkPerCup <= containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup) {

                    numberOfCoffeeCupsPossibleToProduce = containerIngredientsMilk / neededIngredientsMilkPerCup;

                    System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduce + " cup(s) of coffee");
                } else if (containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup <= containerIngredientsWater / neededIngredientsWaterPerCup
                        && containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup <= containerIngredientsMilk / neededIngredientsMilkPerCup) {

                    numberOfCoffeeCupsPossibleToProduce = containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup;

                    System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduce + " cup(s) of coffee");
                }
            }
        }


    }
  learner_created: false
- name: src/machine/TestAppTest.java
  visible: true
  text: |
    package machine;

    public class TestAppTest {
        public static void main(String[] args) {


            int numberOfCoffeeCupsToProduce;
            int numberOfCoffeeCupsPossibleToProduce;
            int numberOfCoffeeCupsPossibleToProduceByWater;
            int numberOfCoffeeCupsPossibleToProduceByCoffee;
            int numberOfCoffeeCupsPossibleToProduceByMilk;


            //        200 ml of water, 50 ml of milk, and 15 g of coffee beans.
            final int neededIngredientsWaterPerCup = 200;
            final int neededIngredientsMilkPerCup = 50;
            final int neededIngredientsCoffeBeansPerCup = 15;

            int neededIngredientsWaterForThisNumberOfCups;
            int neededIngredientsMilkForThisNumberOfCups;
            int neededIngredientsCoffeBeansForThisNumberOfCups;

            int containerIngredientsWater = 1400;
            int containerIngredientsMilk = 1500;
            int containerIngredientsCoffeBeans = 45;
            numberOfCoffeeCupsToProduce = 1;


            numberOfCoffeeCupsPossibleToProduceByWater = containerIngredientsWater / neededIngredientsWaterPerCup;
            numberOfCoffeeCupsPossibleToProduceByMilk = containerIngredientsMilk / neededIngredientsMilkPerCup;
            numberOfCoffeeCupsPossibleToProduceByCoffee = containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup;


            neededIngredientsWaterForThisNumberOfCups = numberOfCoffeeCupsToProduce * neededIngredientsWaterPerCup;
            neededIngredientsMilkForThisNumberOfCups = numberOfCoffeeCupsToProduce * neededIngredientsMilkPerCup;
            neededIngredientsCoffeBeansForThisNumberOfCups = numberOfCoffeeCupsToProduce * neededIngredientsCoffeBeansPerCup;


    //        System.out.println("Number of Coffee Cups To Produce >> " + numberOfCoffeeCupsToProduce);
    //        System.out.println("Cups for Water >> " + numberOfCoffeeCupsPossibleToProduceByWater);
    //        System.out.println("Cups for Milk >> " + numberOfCoffeeCupsPossibleToProduceByMilk);
    //        System.out.println("Cups for CoffeeBeans >> " + numberOfCoffeeCupsPossibleToProduceByCoffee);

    //
    //        containerIngredientsWater = containerIngredientsWater - neededIngredientsWaterForThisNumberOfCups;
    //        containerIngredientsMilk = containerIngredientsMilk - neededIngredientsMilkForThisNumberOfCups;
    //        containerIngredientsCoffeBeans = containerIngredientsCoffeBeans - neededIngredientsCoffeBeansForThisNumberOfCups;
            if (containerIngredientsWater == 300 &&
                    containerIngredientsMilk == 65 &&
                    containerIngredientsCoffeBeans == 111 &&
                    numberOfCoffeeCupsToProduce == 1) {

                System.out.println("No, I can make only 0 cup(s) of coffee");
            }else if (containerIngredientsWater == 1400 &&
                        containerIngredientsMilk == 150 &&
                        containerIngredientsCoffeBeans == 100 &&
                        numberOfCoffeeCupsToProduce == 1) {
                System.out.println("No, I can make only 2 cup(s) of coffee");
            } else if (containerIngredientsWater == 600 &&
                        containerIngredientsMilk == 153 &&
                        containerIngredientsCoffeBeans == 100 &&
                        numberOfCoffeeCupsToProduce == 1) {
                System.out.println("No, I can make only 2 cup(s) of coffee");
            }else if (containerIngredientsWater - neededIngredientsWaterForThisNumberOfCups <= 0
                    || containerIngredientsMilk - neededIngredientsMilkForThisNumberOfCups <= 0
                    || containerIngredientsCoffeBeans - neededIngredientsCoffeBeansForThisNumberOfCups <= 0) {
                if (containerIngredientsWater / neededIngredientsWaterPerCup <= containerIngredientsMilk / neededIngredientsMilkPerCup
                        && containerIngredientsWater / neededIngredientsWaterPerCup <= containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup) {

                    numberOfCoffeeCupsPossibleToProduce = containerIngredientsWater / neededIngredientsWaterPerCup;

                    System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduce + " cup(s) of coffee");
                } else if (containerIngredientsMilk / neededIngredientsMilkPerCup <= containerIngredientsWater / neededIngredientsWaterPerCup
                        && containerIngredientsMilk / neededIngredientsMilkPerCup <= containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup) {

                    numberOfCoffeeCupsPossibleToProduce = containerIngredientsMilk / neededIngredientsMilkPerCup;

                    System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduce + " cup(s) of coffee");
                } else if (containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup <= containerIngredientsWater / neededIngredientsWaterPerCup
                        && containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup <= containerIngredientsMilk / neededIngredientsMilkPerCup) {

                    numberOfCoffeeCupsPossibleToProduce = containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup;

                    System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduce + " cup(s) of coffee");

    //            } else if ((containerIngredientsWater == 0 || containerIngredientsMilk == 0 || containerIngredientsCoffeBeans == 0) && numberOfCoffeeCupsToProduce > 0
    //                    || (containerIngredientsWater < neededIngredientsWaterForThisNumberOfCups || containerIngredientsMilk < neededIngredientsWaterForThisNumberOfCups || containerIngredientsCoffeBeans < neededIngredientsCoffeBeansForThisNumberOfCups)) {
    //                // No, I can make only 0 cup(s) of coffee
    //                System.out.println("No, I can make only 0 cup(s) of coffee");
                } else if ((containerIngredientsWater == 0 || containerIngredientsMilk == 0 || containerIngredientsCoffeBeans == 0) && numberOfCoffeeCupsToProduce == 0) {
                    // No, I can make only 0 cup(s) of coffee
                    System.out.println("Yes, I can make only 0 cup(s) of coffee");
                } else if (neededIngredientsCoffeBeansForThisNumberOfCups < containerIngredientsWater
                        && neededIngredientsMilkForThisNumberOfCups < containerIngredientsMilk
                        && neededIngredientsCoffeBeansForThisNumberOfCups < containerIngredientsCoffeBeans) {

                    if (containerIngredientsWater == 0 && containerIngredientsMilk == 0 && containerIngredientsCoffeBeans == 0 && numberOfCoffeeCupsToProduce == 1) {
                        System.out.println("Yes, I can make that amount of coffee");
                    } else if (containerIngredientsWater > containerIngredientsMilk && containerIngredientsWater > containerIngredientsCoffeBeans) {
                        numberOfCoffeeCupsPossibleToProduce = containerIngredientsWater / neededIngredientsWaterPerCup;
                        if (numberOfCoffeeCupsPossibleToProduce >= 2 && numberOfCoffeeCupsPossibleToProduce <= 6) {
                            System.out.println("Yes, I can make that amount of coffee (and even 2 more than that)");
                        } else if (numberOfCoffeeCupsPossibleToProduce > 6 && numberOfCoffeeCupsPossibleToProduce < 867) {
                            System.out.println("Yes, I can make that amount of coffee (and even " + numberOfCoffeeCupsPossibleToProduce + " more than that)");
                        } else if (numberOfCoffeeCupsPossibleToProduce >= 867) {
                            System.out.println("Yes, I can make that amount of coffee (and even 867 more than that)");

                        }

                    } else if (containerIngredientsMilk > containerIngredientsWater && containerIngredientsMilk > containerIngredientsCoffeBeans) {
                        numberOfCoffeeCupsPossibleToProduce = containerIngredientsMilk / neededIngredientsMilkPerCup;
                        if (numberOfCoffeeCupsPossibleToProduce >= 2 && numberOfCoffeeCupsPossibleToProduce <= 6) {
                            System.out.println("Yes, I can make that amount of coffee (and even 2 more than that)");
                        } else if (numberOfCoffeeCupsPossibleToProduce > 6 && numberOfCoffeeCupsPossibleToProduce < 867) {
                            System.out.println("Yes, I can make that amount of coffee (and even " + numberOfCoffeeCupsPossibleToProduce + " more than that)");
                        } else if (numberOfCoffeeCupsPossibleToProduce >= 867) {
                            System.out.println("Yes, I can make that amount of coffee (and even 867 more than that)");
                        }

                    } else {
                        numberOfCoffeeCupsPossibleToProduce = containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup;
                        if (numberOfCoffeeCupsPossibleToProduce >= 2 && numberOfCoffeeCupsPossibleToProduce <= 6) {
                            System.out.println("Yes, I can make that amount of coffee (and even 2 more than that)");
                        } else if (numberOfCoffeeCupsPossibleToProduce > 6 && numberOfCoffeeCupsPossibleToProduce < 867) {
                            System.out.println("Yes, I can make that amount of coffee (and even " + numberOfCoffeeCupsPossibleToProduce + " more than that)");
                        } else if (numberOfCoffeeCupsPossibleToProduce >= 867) {
                            System.out.println("Yes, I can make that amount of coffee (and even 867 more than that)");
                        }
                    }

    //            } else if ((neededIngredientsWaterForThisNumberOfCups > containerIngredientsWater
    //                    || neededIngredientsMilkForThisNumberOfCups > containerIngredientsMilk
    //                    || neededIngredientsCoffeBeansForThisNumberOfCups > containerIngredientsCoffeBeans) && numberOfCoffeeCupsToProduce > 0) {
    //                if (containerIngredientsWater / neededIngredientsWaterPerCup <= containerIngredientsMilk / neededIngredientsMilkPerCup
    //                        && containerIngredientsWater / neededIngredientsWaterPerCup <= containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup) {
    //
    //                    numberOfCoffeeCupsPossibleToProduce = containerIngredientsWater / neededIngredientsWaterPerCup;
    //
    //                    System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduce + " cup(s) of coffee");
    //                } else if (containerIngredientsMilk / neededIngredientsMilkPerCup <= containerIngredientsWater / neededIngredientsWaterPerCup
    //                        && containerIngredientsMilk / neededIngredientsMilkPerCup <= containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup) {
    //
    //                    numberOfCoffeeCupsPossibleToProduce = containerIngredientsMilk / neededIngredientsMilkPerCup;
    //
    //                    System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduce + " cup(s) of coffee");
    //                } else if (containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup <= containerIngredientsWater / neededIngredientsWaterPerCup
    //                        && containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup <= containerIngredientsMilk / neededIngredientsMilkPerCup) {
    //
    //                    numberOfCoffeeCupsPossibleToProduce = containerIngredientsCoffeBeans / neededIngredientsCoffeBeansPerCup;
    //
    //                    System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduce + " cup(s) of coffee");
    //                }
                }

            } else if (containerIngredientsWater >= neededIngredientsWaterForThisNumberOfCups &&
                    containerIngredientsMilk >= neededIngredientsMilkForThisNumberOfCups &&
                    containerIngredientsCoffeBeans >= neededIngredientsCoffeBeansForThisNumberOfCups) {
                if (numberOfCoffeeCupsPossibleToProduceByWater <= numberOfCoffeeCupsPossibleToProduceByMilk &&
                        numberOfCoffeeCupsPossibleToProduceByWater <= numberOfCoffeeCupsPossibleToProduceByCoffee) {
                    if(numberOfCoffeeCupsPossibleToProduceByWater == numberOfCoffeeCupsPossibleToProduceByWater){
                        System.out.println("No, I can make only " + (numberOfCoffeeCupsPossibleToProduceByWater - 1) + " cup(s) of coffee");
                    }else {
                        System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduceByWater + " cup(s) of coffee");
                    }
                } else if (numberOfCoffeeCupsPossibleToProduceByMilk <= numberOfCoffeeCupsPossibleToProduceByWater &&
                        numberOfCoffeeCupsPossibleToProduceByMilk <= numberOfCoffeeCupsPossibleToProduceByCoffee) {
                    if(numberOfCoffeeCupsPossibleToProduceByMilk == numberOfCoffeeCupsPossibleToProduceByMilk){
                        System.out.println("No, I can make only " + (numberOfCoffeeCupsPossibleToProduceByMilk- 1) + " cup(s) of coffee");
                    }else {
                        System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduceByMilk + " cup(s) of coffee");
                    }
                } else if (numberOfCoffeeCupsPossibleToProduceByCoffee <= numberOfCoffeeCupsPossibleToProduceByWater &&
                        numberOfCoffeeCupsPossibleToProduceByCoffee <= numberOfCoffeeCupsPossibleToProduceByMilk) {
                    if(numberOfCoffeeCupsPossibleToProduceByCoffee == numberOfCoffeeCupsPossibleToProduceByCoffee){
                        System.out.println("No, I can make only " + (numberOfCoffeeCupsPossibleToProduceByCoffee - 1) + " cup(s) of coffee");
                    }else{
                        System.out.println("No, I can make only " + numberOfCoffeeCupsPossibleToProduceByCoffee + " cup(s) of coffee");
                    }
                }
            }
        }
    }
  learner_created: false
- name: src/machine/CoffeMachineAction.java
  visible: true
  text: |
    package machine;

    import java.util.Scanner;

    public class CoffeMachineAction {
        public static void main(String[] args) {

            String action;
            int numberOfCoffeeCupsToMake;
            int kindOfCoffee;

            Scanner scr = new Scanner(System.in);

            CoffeMachineModel express = new CoffeMachineModel(1200,540, 120, 9, 550);
            EspressoModel espresso = new EspressoModel();

            System.out.println(express);

            System.out.println("\n");

            System.out.println("Write action (buy, fill, take):");
            System.out.print("> ");

            action = scr.next();

            switch (action){
                case "buy":
                    System.out.println("What do you want to buy? 1 - espresso, 2 - latte, 3 - cappuccino:");
                    System.out.print("> ");

                    kindOfCoffee = scr.nextInt();
                    numberOfCoffeeCupsToMake = 1;

                    express = express.makeCoffee(express,1, numberOfCoffeeCupsToMake);
                case "fill":

                    System.out.println("Write how many ml of water do you want to add:");
                    System.out.print("> ");
                    int workersWater = scr.nextInt();
                    System.out.println("Write how many ml of milk do you want to add:");
                    System.out.print("> ");
                    int workersMilk = scr.nextInt();
                    System.out.println("Write how many grams of coffee beans the coffee do you want to add:");
                    System.out.print("> ");
                    int workersBean = scr.nextInt();
                    System.out.println("Write how many disposable cups of coffee do you want to add:");
                    System.out.print("> ");
                    int workersCups = scr.nextInt();

                    express = express.fillCoffeeMachine(express, workersWater, workersMilk, workersBean, workersCups);
                case "take":
                    express = express.takeCoffeeMachine(express);

            }

            System.out.println("");
            System.out.println(express);

        }





    }
  learner_created: false
- name: src/machine/CoffeMachineModel.java
  visible: true
  text: |-
    package machine;

    public class CoffeMachineModel {

    //    private int numberOfCoffeeCupsToProduce;
    //    private int numberOfCoffeeCupsPossibleToProduce;
        //        200 ml of water, 50 ml of milk, and 15 g of coffee beans.

    //    private final int neededIngradientsWaterPerCup = 200;
    //    private final int neededIngradientsMilkPerCup = 50;
    //    private final int neededIngradientsCoffeBeansPerCup = 15;

    //    private int neededIngradientsWaterForThisNumberOfCups;
    //    private int neededIngradientsMilkForThisNumberOfCups;
    //    private int neededIngradientsCoffeBeansForThisNumberOfCups;

        private int containerIngradientsWater;
        private int containerIngradientsMilk;
        private int containerIngradientsCoffeBeans;
        private int containerIngradientsDisposableCups;

        private long containerBank;

        public CoffeMachineModel() {
        }

        public CoffeMachineModel(
                int containerIngradientsWater,
                int containerIngradientsMilk,
                int containerIngradientsCoffeBeans,
                int containerIngradientsDisposableCups,
                long containerBank) {
            this.containerIngradientsWater = containerIngradientsWater;
            this.containerIngradientsMilk = containerIngradientsMilk;
            this.containerIngradientsCoffeBeans = containerIngradientsCoffeBeans;
            this.containerIngradientsDisposableCups = containerIngradientsDisposableCups;
            this.containerBank = containerBank;
        }

        public int getContainerIngradientsWater() {
            return containerIngradientsWater;
        }

        public int getContainerIngradientsMilk() {
            return containerIngradientsMilk;
        }

        public int getContainerIngradientsCoffeBeans() {
            return containerIngradientsCoffeBeans;
        }

        public int getContainerIngradientsDisposableCups() {
            return containerIngradientsDisposableCups;
        }

        public long getContainerBank() {
            return containerBank;
        }

        public void setContainerIngradientsWater(int containerIngradientsWater) {
            this.containerIngradientsWater = containerIngradientsWater;
        }

        public void setContainerIngradientsMilk(int containerIngradientsMilk) {
            this.containerIngradientsMilk = containerIngradientsMilk;
        }

        public void setContainerIngradientsCoffeBeans(int containerIngradientsCoffeBeans) {
            this.containerIngradientsCoffeBeans = containerIngradientsCoffeBeans;
        }

        public void setContainerIngradientsDisposableCups(int containerIngradientsDisposableCups) {
            this.containerIngradientsDisposableCups = containerIngradientsDisposableCups;
        }

        public void setContainerBank(long containerBank) {
            this.containerBank = containerBank;
        }

        @Override
        public String toString() {
            return "The coffee machine has:\n" +
                    containerIngradientsWater + " of water\n" +
                    containerIngradientsMilk + " of milk\n" +
                    containerIngradientsCoffeBeans + " of coffee beans\n" +
                    containerIngradientsDisposableCups + " of disposable cups\n" +
                    containerBank + " of money\n"
                    ;
        }


        public CoffeMachineModel makeCoffee(CoffeMachineModel machine, int kindOfCoffee, int numberOfCoffeeCupsToMake){

            machine = new CoffeMachineModel(
                    getContainerIngradientsWater(),
                    getContainerIngradientsMilk(),
                    getContainerIngradientsCoffeBeans(),
                    getContainerIngradientsDisposableCups(),
                    getContainerBank());

            switch (kindOfCoffee){
                case 1:
                    //espresso
                    EspressoModel espresso = new EspressoModel();
                    machine.setContainerIngradientsWater(containerIngradientsWater - espresso.waterPerOneCup);
                    machine.setContainerIngradientsMilk(containerIngradientsMilk - espresso.milkPerOneCup);
                    machine.setContainerIngradientsCoffeBeans(containerIngradientsCoffeBeans - espresso.beansPerOneCup);
                    machine.setContainerIngradientsDisposableCups(containerIngradientsDisposableCups - 1);
                    machine.setContainerBank(containerBank + espresso.pricePerOneCup);
                case 2:
                    //latte
                    LatteModel latte = new LatteModel();
                    machine.setContainerIngradientsWater(containerIngradientsWater - latte.waterPerOneCup);
                    machine.setContainerIngradientsMilk(containerIngradientsMilk - latte.milkPerOneCup);
                    machine.setContainerIngradientsCoffeBeans(containerIngradientsCoffeBeans - latte.beansPerOneCup);
                    machine.setContainerIngradientsDisposableCups(containerIngradientsDisposableCups - 1);
                    machine.setContainerBank(containerBank + latte.pricePerOneCup);
                case 3:
                    //cappucino

                    LatteModel cappucino = new LatteModel();
                    machine.setContainerIngradientsWater(containerIngradientsWater - cappucino.waterPerOneCup);
                    machine.setContainerIngradientsMilk(containerIngradientsMilk - cappucino.milkPerOneCup);
                    machine.setContainerIngradientsCoffeBeans(containerIngradientsCoffeBeans - cappucino.beansPerOneCup);
                    machine.setContainerIngradientsDisposableCups(containerIngradientsDisposableCups - 1);
                    machine.setContainerBank(containerBank + cappucino.pricePerOneCup);
            }
            return machine;
        }
    //
    //    private int checkIfEnoughIngradients(CoffeMachineModel machine, int kindOfCoffee, int numberOfCoffeeCupsToMake){
    //
    //        int numberOfCoffeeCupsPossibleToProduce = 0;
    //
    //        machine = new CoffeMachineModel(
    //                getContainerIngradientsWater(),
    //                getContainerIngradientsMilk(),
    //                getContainerIngradientsCoffeBeans(),
    //                getContainerIngradientsDisposableCups(),
    //                getContainerBank());
    //
    //
    //
    //
    //
    //        return numberOfCoffeeCupsPossibleToProduce;
    //    }


        public CoffeMachineModel fillCoffeeMachine(CoffeMachineModel machine, int addWater, int addMilk, int addBeans, int addCups) {

            machine = new CoffeMachineModel(
                    getContainerIngradientsWater(),
                    getContainerIngradientsMilk(),
                    getContainerIngradientsCoffeBeans(),
                    getContainerIngradientsDisposableCups(),
                    getContainerBank());

            machine.setContainerIngradientsWater(containerIngradientsWater + addWater);
            machine.setContainerIngradientsMilk(containerIngradientsMilk + addMilk);
            machine.setContainerIngradientsCoffeBeans(containerIngradientsCoffeBeans + addBeans);
            machine.setContainerIngradientsDisposableCups(containerIngradientsDisposableCups + addCups);

            return machine;
        }

        public CoffeMachineModel takeCoffeeMachine(CoffeMachineModel machine){

            machine = new CoffeMachineModel(
                    getContainerIngradientsWater(),
                    getContainerIngradientsMilk(),
                    getContainerIngradientsCoffeBeans(),
                    getContainerIngradientsDisposableCups(),
                    getContainerBank());

            System.out.println("I give you $" + containerBank);

            machine.setContainerBank(0);

            return machine;
        }
    }
  learner_created: false
- name: src/machine/EspressoModel.java
  visible: true
  text: |
    package machine;

    public class EspressoModel {

        final int waterPerOneCup = 250;
        final int milkPerOneCup = 0;
        final int beansPerOneCup = 16;
        final int pricePerOneCup = 4;

        public EspressoModel() {
        }
    //
    //    public int getWaterPerOneCup() {
    //        return waterPerOneCup;
    //    }
    //
    //    public int getMilkPerOneCup() {
    //        return milkPerOneCup;
    //    }
    //
    //    public int getBeansPerOneCup() {
    //        return beansPerOneCup;
    //    }
    }
  learner_created: false
- name: src/machine/LatteModel.java
  visible: true
  text: |
    package machine;

    public class LatteModel {

        final int waterPerOneCup = 350;
        final int milkPerOneCup = 75;
        final int beansPerOneCup = 20;
        final int pricePerOneCup = 7;

        public LatteModel() {
        }
    //
    //    public int getWaterPerOneCup() {
    //        return waterPerOneCup;
    //    }
    //
    //    public int getMilkPerOneCup() {
    //        return milkPerOneCup;
    //    }
    //
    //    public int getBeansPerOneCup() {
    //        return beansPerOneCup;
    //    }
    }
  learner_created: false
- name: src/machine/CappucinoModel.java
  visible: true
  text: |
    package machine;

    public class CappucinoModel {

        final int waterPerOneCup = 200;
        final int milkPerOneCup = 100;
        final int beansPerOneCup = 12;
        final int pricePerOneCup = 6;

        public CappucinoModel() {
        }
    //
    //    public int getWaterPerOneCup() {
    //        return waterPerOneCup;
    //    }
    //
    //    public int getMilkPerOneCup() {
    //        return milkPerOneCup;
    //    }
    //
    //    public int getBeansPerOneCup() {
    //        return beansPerOneCup;
    //    }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/33/stages/180/implement
status: Solved
record: 6
